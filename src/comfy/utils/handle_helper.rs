
/*
..####...##..##..######..##......##......##..##...####...##..##..#####...##......######.
.##......##..##..##......##......##......##..##..##..##..###.##..##..##..##......##.....
..####...######..####....##......##......######..######..##.###..##..##..##......####...
.....##..##..##..##......##......##......##..##..##..##..##..##..##..##..##......##.....
..####...##..##..######..######..######..##..##..##..##..##..##..#####...######..######.
........................................................................................
.##..##..######..##......#####...######..#####..
.##..##..##......##......##..##..##......##..##.
.######..####....##......#####...####....#####..
.##..##..##......##......##......##......##..##.
.##..##..######..######..##......######..##..##.
................................................
*/

pub mod shell_handle_helper {
	use wlroots::{Area, XdgV6ShellSurfaceHandle as WLRXdgV6ShellSurfaceHandle};

	/// Returns the area (geometry) of the shell of the provided shell handle
	pub fn get_shell_area(shell_handle: &WLRXdgV6ShellSurfaceHandle) -> Area {
		shell_handle.run(|shell| shell.geometry()).unwrap()
	}
}
